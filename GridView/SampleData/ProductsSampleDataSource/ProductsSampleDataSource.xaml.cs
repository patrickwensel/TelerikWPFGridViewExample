//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Telerik.Windows.Examples
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class Northwind { }
#else

    public partial class Northwind
	{
		private ProductsCollection _ProductsCollection;
		public ProductsCollection ProductsCollection
		{
			get
			{
                if(this._ProductsCollection == null)
                {
                    this._ProductsCollection = new ProductsCollection();

                    System.Uri resourceUri = new System.Uri("/GridView;component/SampleData/ProductsSampleDataSource/ProductsSampleDataSource.xaml", System.UriKind.Relative);
                    if (System.Windows.Application.GetResourceStream(resourceUri) != null)
                    {
                        System.Windows.Application.LoadComponent(this, resourceUri);
                    }
                }
				return this._ProductsCollection;
			}
		}
	}

	public class Products : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private double _ProductID = 0;

		public double ProductID
		{
			get
			{
				return this._ProductID;
			}

			set
			{
				if (this._ProductID != value)
				{
					this._ProductID = value;
					this.OnPropertyChanged("ProductID");
				}
			}
		}

		private string _ProductName = string.Empty;

		public string ProductName
		{
			get
			{
				return this._ProductName;
			}

			set
			{
				if (this._ProductName != value)
				{
					this._ProductName = value;
					this.OnPropertyChanged("ProductName");
				}
			}
		}

		private double _SupplierID = 0;

		public double SupplierID
		{
			get
			{
				return this._SupplierID;
			}

			set
			{
				if (this._SupplierID != value)
				{
					this._SupplierID = value;
					this.OnPropertyChanged("SupplierID");
				}
			}
		}

		private double _CategoryID = 0;

		public double CategoryID
		{
			get
			{
				return this._CategoryID;
			}

			set
			{
				if (this._CategoryID != value)
				{
					this._CategoryID = value;
					this.OnPropertyChanged("CategoryID");
				}
			}
		}

		private string _QuantityPerUnit = string.Empty;

		public string QuantityPerUnit
		{
			get
			{
				return this._QuantityPerUnit;
			}

			set
			{
				if (this._QuantityPerUnit != value)
				{
					this._QuantityPerUnit = value;
					this.OnPropertyChanged("QuantityPerUnit");
				}
			}
		}

		private double _UnitPrice = 0;

		public double UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}

			set
			{
				if (this._UnitPrice != value)
				{
					this._UnitPrice = value;
					this.OnPropertyChanged("UnitPrice");
				}
			}
		}

		private double _UnitsInStock = 0;

		public double UnitsInStock
		{
			get
			{
				return this._UnitsInStock;
			}

			set
			{
				if (this._UnitsInStock != value)
				{
					this._UnitsInStock = value;
					this.OnPropertyChanged("UnitsInStock");
				}
			}
		}

		private double _UnitsOnOrder = 0;

		public double UnitsOnOrder
		{
			get
			{
				return this._UnitsOnOrder;
			}

			set
			{
				if (this._UnitsOnOrder != value)
				{
					this._UnitsOnOrder = value;
					this.OnPropertyChanged("UnitsOnOrder");
				}
			}
		}

		private double _ReorderLevel = 0;

		public double ReorderLevel
		{
			get
			{
				return this._ReorderLevel;
			}

			set
			{
				if (this._ReorderLevel != value)
				{
					this._ReorderLevel = value;
					this.OnPropertyChanged("ReorderLevel");
				}
			}
		}

		private double _Discontinued = 0;

		public double Discontinued
		{
			get
			{
				return this._Discontinued;
			}

			set
			{
				if (this._Discontinued != value)
				{
					this._Discontinued = value;
					this.OnPropertyChanged("Discontinued");
				}
			}
		}
	}

	public class ProductsCollection : System.Collections.ObjectModel.ObservableCollection<Products>
	{ 
	}
#endif
}
