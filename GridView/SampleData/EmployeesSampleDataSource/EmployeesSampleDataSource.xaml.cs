//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Telerik.Windows.Examples
{
	using System;
    using System.Linq;
    using System.Collections.Generic;
using System.ComponentModel; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class Northwind { }
#else

	public partial class Northwind
	{
		private EmployeesCollection _EmployeesCollection;
		public EmployeesCollection EmployeesCollection
		{
			get
			{
                if (this._EmployeesCollection == null)
                {
                    this._EmployeesCollection = new EmployeesCollection();

                    System.Uri resourceUri = new System.Uri("/GridView;component/SampleData/EmployeesSampleDataSource/EmployeesSampleDataSource.xaml", System.UriKind.Relative);
                    if (System.Windows.Application.GetResourceStream(resourceUri) != null)
                    {
                        System.Windows.Application.LoadComponent(this, resourceUri);
                    }
                }
				return this._EmployeesCollection;
			}
		}
	}

	public partial class Employee : System.ComponentModel.INotifyPropertyChanged
    {
        static Northwind _Northwind;
        public static Northwind Northwind
        {
            get
            {
                if (_Northwind == null)
                {
                    _Northwind = new Northwind();
                }

                return _Northwind;
            }
        }

        IEnumerable<Order> orders;

        [System.ComponentModel.Browsable(false)]
        public IEnumerable<Order> Orders
        {
            get
            {
                if (orders == null)
                {
                    orders = from o in Northwind.OrdersCollection
                             where o.EmployeeID == EmployeeID
                             select o;
                }

                return orders;
            }
        }

        byte[] _Picture;
        public byte[] Picture
        {
            get
            {
                if (_Picture == null)
                {
                    if (!String.IsNullOrEmpty(this.Photo))
                    {
                        this._Picture = Convert.FromBase64String(this.Photo);
                    }
                }
                return this._Picture;
            }
        }

		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private double _EmployeeID = 0;

		public double EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}

			set
			{
				if (this._EmployeeID != value)
				{
					this._EmployeeID = value;
					this.OnPropertyChanged("EmployeeID");
				}
			}
		}

		private string _LastName = string.Empty;

		public string LastName
		{
			get
			{
				return this._LastName;
			}

			set
			{
				if (this._LastName != value)
				{
					this._LastName = value;
					this.OnPropertyChanged("LastName");
				}
			}
		}

		private string _FirstName = string.Empty;

		public string FirstName
		{
			get
			{
				return this._FirstName;
			}

			set
			{
				if (this._FirstName != value)
				{
					this._FirstName = value;
					this.OnPropertyChanged("FirstName");
				}
			}
		}

		private string _Title = string.Empty;

		public string Title
		{
			get
			{
				return this._Title;
			}

			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _TitleOfCourtesy = string.Empty;

		public string TitleOfCourtesy
		{
			get
			{
				return this._TitleOfCourtesy;
			}

			set
			{
				if (this._TitleOfCourtesy != value)
				{
					this._TitleOfCourtesy = value;
					this.OnPropertyChanged("TitleOfCourtesy");
				}
			}
		}

		private DateTime _BirthDate;

        public DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}

			set
			{
				if (this._BirthDate != value)
				{
					this._BirthDate = value;
					this.OnPropertyChanged("BirthDate");
				}
			}
		}

        private DateTime _HireDate;

        public DateTime HireDate
		{
			get
			{
				return this._HireDate;
			}

			set
			{
				if (this._HireDate != value)
				{
					this._HireDate = value;
					this.OnPropertyChanged("HireDate");
				}
			}
		}

		private string _Address = string.Empty;

		public string Address
		{
			get
			{
				return this._Address;
			}

			set
			{
				if (this._Address != value)
				{
					this._Address = value;
					this.OnPropertyChanged("Address");
				}
			}
		}

		private string _City = string.Empty;

		public string City
		{
			get
			{
				return this._City;
			}

			set
			{
				if (this._City != value)
				{
					this._City = value;
					this.OnPropertyChanged("City");
				}
			}
		}

		private string _Region = string.Empty;

		public string Region
		{
			get
			{
				return this._Region;
			}

			set
			{
				if (this._Region != value)
				{
					this._Region = value;
					this.OnPropertyChanged("Region");
				}
			}
		}

		private string _PostalCode = string.Empty;

		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}

			set
			{
				if (this._PostalCode != value)
				{
					this._PostalCode = value;
					this.OnPropertyChanged("PostalCode");
				}
			}
		}

		private string _Country = string.Empty;

		public string Country
		{
			get
			{
				return this._Country;
			}

			set
			{
				if (this._Country != value)
				{
					this._Country = value;
					this.OnPropertyChanged("Country");
				}
			}
		}

		private string _HomePhone = string.Empty;

		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}

			set
			{
				if (this._HomePhone != value)
				{
					this._HomePhone = value;
					this.OnPropertyChanged("HomePhone");
				}
			}
		}

		private double _Extension = 0;

		public double Extension
		{
			get
			{
				return this._Extension;
			}

			set
			{
				if (this._Extension != value)
				{
					this._Extension = value;
					this.OnPropertyChanged("Extension");
				}
			}
		}

		private string _Photo = string.Empty;

		public string Photo
		{
			get
			{
				return this._Photo;
			}

			set
			{
				if (this._Photo != value)
				{
					this._Photo = value;
					this.OnPropertyChanged("Photo");
				}
			}
		}

		private string _Notes = string.Empty;

		public string Notes
		{
			get
			{
				return this._Notes;
			}

			set
			{
				if (this._Notes != value)
				{
					this._Notes = value;
					this.OnPropertyChanged("Notes");
				}
			}
		}

		private double _ReportsTo = 0;

		public double ReportsTo
		{
			get
			{
				return this._ReportsTo;
			}

			set
			{
				if (this._ReportsTo != value)
				{
					this._ReportsTo = value;
					this.OnPropertyChanged("ReportsTo");
				}
			}
		}
	}

	public class EmployeesCollection : System.Collections.ObjectModel.ObservableCollection<Employee>
	{ 
	}
#endif
}
